@model TaskItem

<div class="task-details">
    <div class="mb-3">
        <h5>@Model.Title</h5>
        <span class="badge bg-@(Model.Status switch {
            TaskStatus.ToDo => "secondary",
            TaskStatus.InProgress => "primary",
            TaskStatus.UnderReview => "info",
            TaskStatus.Completed => "success",
            TaskStatus.Blocked => "danger",
            _ => "secondary"
        })">@Model.Status</span>
    </div>
    
    <div class="mb-3">
        <h6>Description</h6>
        <p>@(string.IsNullOrEmpty(Model.Description) ? "No description provided" : Model.Description)</p>
    </div>
    
    <div class="row mb-3">
        <div class="col-md-6">
            <h6>Priority</h6>
            <p>@Model.Priority</p>
        </div>
        <div class="col-md-6">
            <h6>Due Date</h6>
            <p>@Model.DueDate.ToShortDateString()</p>
        </div>
    </div>
    
    <div class="mb-3">
        <h6>Assigned To</h6>
        <p>@(Model.AssignedTo != null ? (string.IsNullOrEmpty(Model.AssignedTo.FullName) ? Model.AssignedTo.UserName : Model.AssignedTo.FullName) : "Unassigned")</p>
    </div>
    
    @if (Model.FileAttachments != null && Model.FileAttachments.Any())
    {
        <div class="mb-3">
            <h6>Attachments</h6>
            <ul class="list-group">
                @foreach (var attachment in Model.FileAttachments)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <a href="@Url.Action("DownloadFile", "Tasks", new { id = attachment.Id })" class="text-decoration-none">
                            @attachment.FileName
                        </a>
                    </li>
                }
            </ul>
        </div>
    }
    
    @if (Model.Comments != null && Model.Comments.Any())
    {
        <div class="mb-3">
            <h6>Comments</h6>
            <div class="comments-list">
                @foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedAt))
                {
                    <div class="comment mb-2 p-2 border-bottom">
                        <div class="d-flex justify-content-between">
                            <small class="text-muted">@(comment.User.FullName != null ? (string.IsNullOrEmpty(comment.User.FullName) ? comment.User.UserName : comment.User.FullName) : "Unknown")</small>
                            <small class="text-muted">@comment.CreatedAt.ToString("MMM dd, yyyy HH:mm")</small>
                        </div>
                        <p class="mb-0">@comment.Text</p>
                    </div>
                }
            </div>
        </div>
    }
</div>