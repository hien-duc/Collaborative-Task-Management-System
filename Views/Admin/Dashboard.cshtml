@model AdminDashboardViewModel
@{
    ViewData["Title"] = "Admin Dashboard";
}

<div class="container-fluid py-4">
    <div class="row">
        <!-- Admin Sidebar -->
        <div class="col-md-2 mb-4">
            @await Html.PartialAsync("_AdminSidebar")
        </div>
        
        <!-- Main Content -->
        <div class="col-md-10">
            <h1 class="h3 mb-4">Admin Dashboard</h1>
            
            <!-- System Overview Cards -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card bg-primary text-white">
                        <div class="card-body">
                            <h5 class="card-title">Total Users</h5>
                            <h2 class="card-text">@Model.TotalUsers</h2>
                            <div class="d-flex justify-content-between">
                                <small>Admins: @Model.AdminCount</small>
                                <small>Managers: @Model.ManagerCount</small>
                                <small>Members: @Model.TeamMemberCount</small>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-info text-white">
                        <div class="card-body">
                            <h5 class="card-title">Total Projects</h5>
                            <h2 class="card-text">@Model.TotalProjects</h2>
                            <div class="d-flex justify-content-between">
                                <small>Active: @Model.ActiveProjects</small>
                                <small>Completed: @Model.CompletedProjects</small>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-success text-white">
                        <div class="card-body">
                            <h5 class="card-title">Total Tasks</h5>
                            <h2 class="card-text">@Model.TotalTasks</h2>
                            <div class="d-flex justify-content-between">
                                <small>Completed: @Model.CompletedTasks</small>
                                <small>Overdue: @Model.OverdueTasks</small>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-warning text-dark">
                        <div class="card-body">
                            <h5 class="card-title">System Health</h5>
                            <h2 class="card-text">@(Model.ErrorCount > 0 ? "Issues Found" : "Healthy")</h2>
                            <div class="d-flex justify-content-between">
                                <small>Errors: @Model.ErrorCount</small>
                                <small>Uptime: @Model.SystemUptime hrs</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <!-- Project Status Chart -->
                <div class="col-md-6 mb-4">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Project Status Distribution</h5>
                        </div>
                        <div class="card-body">
                            <canvas id="projectStatusChart"></canvas>
                        </div>
                    </div>
                </div>

                <!-- Task Status Chart -->
                <div class="col-md-6 mb-4">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Task Status Distribution</h5>
                        </div>
                        <div class="card-body">
                            <canvas id="taskStatusChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <!-- Top Users -->
                <div class="col-md-6 mb-4">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Top Users by Task Completion</h5>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>User</th>
                                            <th>Completed</th>
                                            <th>Total</th>
                                            <th>Rate</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var user in Model.TopUsers)
                                        {
                                            <tr>
                                                <td>@user.FullName</td>
                                                <td>@user.CompletedTasks</td>
                                                <td>@user.TotalAssignedTasks</td>
                                                <td>
                                                    <div class="progress" style="height: 10px;">
                                                        <div class="progress-bar" role="progressbar" style="width: @user.CompletionRate%;"
                                                             aria-valuenow="@user.CompletionRate" aria-valuemin="0" aria-valuemax="100">
                                                        </div>
                                                    </div>
                                                    <small>@user.CompletionRate.ToString("F1")%</small>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Recent Activity -->
                <div class="col-md-6 mb-4">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Recent Activity</h5>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Time</th>
                                            <th>User</th>
                                            <th>Action</th>
                                            <th>Details</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var log in Model.RecentActivity)
                                        {
                                            <tr>
                                                <td>
                                                    <small class="text-muted">
                                                        @log.Timestamp.ToString("MM/dd HH:mm")
                                                    </small>
                                                </td>
                                                <td>@log.User?.UserName</td>
                                                <td>
                                                    <span class="badge bg-@(log.Action switch {
                                                        "Create" => "success",
                                                        "Update" => "warning",
                                                        "Delete" => "danger",
                                                        "Login" => "info",
                                                        "Logout" => "secondary",
                                                        _ => "primary"
                                                    })">@log.Action</span>
                                                </td>
                                                <td>
                                                    <button type="button" class="btn btn-link p-0" 
                                                            data-bs-toggle="modal" data-bs-target="#logDetails-@log.Id"
                                                            aria-label="View details for log @log.Id">
                                                        View
                                                    </button>

                                                    <!-- Log Details Modal -->
                                                    <div class="modal fade" id="logDetails-@log.Id" tabindex="-1" 
                                                         aria-labelledby="logDetailsLabel-@log.Id" aria-hidden="true">
                                                        <div class="modal-dialog">
                                                            <div class="modal-content">
                                                                <div class="modal-header">
                                                                    <h5 class="modal-title" id="logDetailsLabel-@log.Id">Log Details</h5>
                                                                    <button type="button" class="btn-close" data-bs-dismiss="modal" 
                                                                            aria-label="Close"></button>
                                                                </div>
                                                                <div class="modal-body">
                                                                    <dl class="row">
                                                                        <dt class="col-sm-4">Timestamp</dt>
                                                                        <dd class="col-sm-8">@log.Timestamp.ToString("MM/dd/yyyy HH:mm:ss")</dd>

                                                                        <dt class="col-sm-4">User</dt>
                                                                        <dd class="col-sm-8">@log.User?.UserName</dd>

                                                                        <dt class="col-sm-4">Action</dt>
                                                                        <dd class="col-sm-8">@log.Action</dd>

                                                                        <dt class="col-sm-4">Details</dt>
                                                                        <dd class="col-sm-8">@log.Details</dd>

                                                                        @if (!string.IsNullOrEmpty(log.EntityType))
                                                                        {
                                                                            <dt class="col-sm-4">Entity Type</dt>
                                                                            <dd class="col-sm-8">@log.EntityType</dd>
                                                                        }

                                                                        @if (!string.IsNullOrEmpty(log.EntityId))
                                                                        {
                                                                            <dt class="col-sm-4">Entity ID</dt>
                                                                            <dd class="col-sm-8">@log.EntityId</dd>
                                                                        }

                                                                        @if (!string.IsNullOrEmpty(log.IpAddress))
                                                                        {
                                                                            <dt class="col-sm-4">IP Address</dt>
                                                                            <dd class="col-sm-8">@log.IpAddress</dd>
                                                                        }
                                                                    </dl>
                                                                </div>
                                                                <div class="modal-footer">
                                                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Project Status Chart
        const projectStatusCtx = document.getElementById('projectStatusChart').getContext('2d');
        const projectStatusChart = new Chart(projectStatusCtx, {
            type: 'doughnut',
            data: {
                labels: ['Planning', 'Active', 'On Hold', 'Completed', 'Cancelled'],
                datasets: [{
                    data: [
                        @Model.PlanningProjects,
                        @Model.ActiveProjects,
                        @Model.OnHoldProjects,
                        @Model.CompletedProjects,
                        @Model.CancelledProjects
                    ],
                    backgroundColor: [
                        '#6c757d',  // Planning - secondary
                        '#0d6efd',  // Active - primary
                        '#ffc107',  // On Hold - warning
                        '#198754',  // Completed - success
                        '#dc3545'   // Cancelled - danger
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });

        // Task Status Chart
        const taskStatusCtx = document.getElementById('taskStatusChart').getContext('2d');
        const taskStatusChart = new Chart(taskStatusCtx, {
            type: 'doughnut',
            data: {
                labels: ['To Do', 'In Progress', 'Under Review', 'Completed', 'Blocked'],
                datasets: [{
                    data: [
                        @Model.TodoTasks,
                        @Model.InProgressTasks,
                        @Model.UnderReviewTasks,
                        @Model.CompletedTasks,
                        @Model.BlockedTasks
                    ],
                    backgroundColor: [
                        '#6c757d',  // To Do - secondary
                        '#0d6efd',  // In Progress - primary
                        '#0dcaf0',  // Under Review - info
                        '#198754',  // Completed - success
                        '#dc3545'   // Blocked - danger
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });
    </script>
}