@model IEnumerable<AuditLog>
@{
    ViewData["Title"] = "Audit Logs";
}

<div class="container-fluid py-4">
    <div class="row">
        <!-- Admin Sidebar -->
        <div class="col-md-2 mb-4">
            @await Html.PartialAsync("_AdminSidebar")
        </div>
        
        <!-- Main Content -->
        <div class="col-md-10">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h1 class="h3 mb-0">Audit Logs</h1>
                        <div class="d-flex gap-2">
                            <div class="input-group">
                                <input type="text" id="logSearch" class="form-control" 
                                       placeholder="Search logs..." aria-label="Search logs">
                                <button class="btn btn-outline-secondary" type="button">
                                    <i class="bi bi-search"></i>
                                </button>
                            </div>
                            <select id="logFilter" class="form-select" aria-label="Filter logs by action">
                                <option value="">All Actions</option>
                                <option value="Create">Create</option>
                                <option value="Update">Update</option>
                                <option value="Delete">Delete</option>
                                <option value="Login">Login</option>
                                <option value="Logout">Logout</option>
                            </select>
                        </div>
                    </div>

                    <div class="table-responsive">
                        <table class="table table-hover" aria-label="Audit logs table">
                            <thead>
                            <tr>
                                <th scope="col" role="columnheader" aria-sort="none">
                                    <button class="btn btn-link text-decoration-none p-0" onclick="sortTable(0)">
                                        Timestamp
                                        <i class="bi bi-arrow-down-up"></i>
                                    </button>
                                </th>
                                <th scope="col" role="columnheader" aria-sort="none">
                                    <button class="btn btn-link text-decoration-none p-0" onclick="sortTable(1)">
                                        User
                                        <i class="bi bi-arrow-down-up"></i>
                                    </button>
                                </th>
                                <th scope="col" role="columnheader" aria-sort="none">
                                    <button class="btn btn-link text-decoration-none p-0" onclick="sortTable(2)">
                                        Action
                                        <i class="bi bi-arrow-down-up"></i>
                                    </button>
                                </th>
                                <th scope="col" role="columnheader">Details</th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var log in Model.OrderByDescending(l => l.Timestamp))
                            {
                                <tr>
                                    <td>
                                        <small class="text-muted">
                                            @log.Timestamp.ToString("MM/dd/yyyy HH:mm:ss")
                                        </small>
                                    </td>
                                    <td>@log.User?.UserName</td>
                                    <td>
                                        <span class="badge bg-@(log.Action switch {
                                                                  "Create" => "success",
                                                                  "Update" => "warning",
                                                                  "Delete" => "danger",
                                                                  "Login" => "info",
                                                                  "Logout" => "secondary",
                                                                  _ => "primary"
                                                              })">@log.Action</span>
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-link p-0" 
                                                data-bs-toggle="modal" data-bs-target="#logDetails-@log.Id"
                                                aria-label="View details for log @log.Id">
                                            View Details
                                        </button>

                                        <!-- Log Details Modal -->
                                        <div class="modal fade" id="logDetails-@log.Id" tabindex="-1" 
                                             aria-labelledby="logDetailsLabel-@log.Id" aria-hidden="true">
                                            <div class="modal-dialog">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <h5 class="modal-title" id="logDetailsLabel-@log.Id">Log Details</h5>
                                                        <button type="button" class="btn-close" data-bs-dismiss="modal" 
                                                                aria-label="Close"></button>
                                                    </div>
                                                    <div class="modal-body">
                                                        <dl class="row">
                                                            <dt class="col-sm-4">Timestamp</dt>
                                                            <dd class="col-sm-8">@log.Timestamp.ToString("MM/dd/yyyy HH:mm:ss")</dd>

                                                            <dt class="col-sm-4">User</dt>
                                                            <dd class="col-sm-8">@log.User?.UserName</dd>

                                                            <dt class="col-sm-4">Action</dt>
                                                            <dd class="col-sm-8">@log.Action</dd>

                                                            <dt class="col-sm-4">Details</dt>
                                                            <dd class="col-sm-8">@log.Details</dd>

                                                            <dt class="col-sm-4">IP Address</dt>
                                                            <dd class="col-sm-8">@log.IpAddress</dd>
                                                        </dl>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                    </div>

                    <!-- Pagination -->
                    <nav aria-label="Audit logs pagination">
                        <ul class="pagination justify-content-center">
                            <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                                <a class="page-link" href="?page=@(ViewBag.CurrentPage - 1)" 
                                   aria-label="Previous page">
                                    <i class="bi bi-chevron-left"></i>
                                </a>
                            </li>
                            @for (int i = 1; i <= ViewBag.TotalPages; i++)
                            {
                                <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                                    <a class="page-link" href="?page=@i">@i</a>
                                </li>
                            }
                            <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                                <a class="page-link" href="?page=@(ViewBag.CurrentPage + 1)" 
                                   aria-label="Next page">
                                    <i class="bi bi-chevron-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
</div>

@section Scripts {
    <script>
        // Handle filter form submission via AJAX
        $(document).ready(function () {
            // Fix for modal backdrop issues
            $('.modal').on('show.bs.modal', function (e) {
                // Ensure only one backdrop exists
                if ($('.modal-backdrop').length > 0) {
                    $('.modal-backdrop').not(':first').remove();
                }
                
                // Ensure body has modal-open class
                $('body').addClass('modal-open');
            });
            
            $('.modal').on('hidden.bs.modal', function () {
                // Remove any lingering backdrops
                $('.modal-backdrop').remove();
                $('body').removeClass('modal-open');
                $('body').css('padding-right', '');
                
                // Additional fix for hover issue
                setTimeout(function() {
                    if ($('.modal.show').length === 0) {
                        $('.modal-backdrop').remove();
                        $('body').removeClass('modal-open');
                    }
                }, 300);
            });
            
            // Fix for the hover issue you described
            $(document).on('mouseover', function(e) {
                // If we're not hovering over a modal and there's a backdrop but no visible modal
                if (!$(e.target).closest('.modal').length && 
                    $('.modal-backdrop').length && 
                    !$('.modal.show').length) {
                    $('.modal-backdrop').remove();
                    $('body').removeClass('modal-open');
                }
            });
            
            $('#filterForm').on('submit', function (e) {
                e.preventDefault();
                var form = $(this);
                $.get(form.attr('action'), form.serialize(), function (data) {
                    $('#auditLogsTable').html(data);
                });
            });
        });

        function resetFilters() {
            $('#userId').val('');
            $('#action').val('');
            $('#fromDate').val('');
            $('#toDate').val('');
            $('#filterForm').submit();
        }

        function filterLogs() {
            const searchQuery = logSearch.value.toLowerCase();
            const filterValue = logFilter.value.toLowerCase();
            const rows = document.querySelectorAll('tbody tr');

            rows.forEach(row => {
                const text = row.textContent.toLowerCase();
                const action = row.querySelector('td:nth-child(3)').textContent.toLowerCase();
                const matchesSearch = searchQuery === '' || text.includes(searchQuery);
                const matchesFilter = filterValue === '' || action.includes(filterValue);
                row.style.display = matchesSearch && matchesFilter ? '' : 'none';
            });
        }

        logSearch.addEventListener('input', () => {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(filterLogs, 300);
        });

        logFilter.addEventListener('change', filterLogs);

        // Table sorting
        let sortDirection = 1;
        let lastSortedColumn = -1;

        function sortTable(columnIndex) {
            const table = document.querySelector('table');
            const rows = Array.from(table.querySelectorAll('tbody tr'));
            const headers = table.querySelectorAll('th');

            // Update sort direction
            if (lastSortedColumn === columnIndex) {
                sortDirection *= -1;
            } else {
                sortDirection = 1;
                lastSortedColumn = columnIndex;
            }

            // Update aria-sort attributes
            headers.forEach(header => header.setAttribute('aria-sort', 'none'));
            headers[columnIndex].setAttribute('aria-sort', sortDirection === 1 ? 'ascending' : 'descending');

            // Sort rows
            rows.sort((a, b) => {
                const aValue = a.children[columnIndex].textContent.trim();
                const bValue = b.children[columnIndex].textContent.trim();
                return aValue.localeCompare(bValue) * sortDirection;
            });

            // Update table
            const tbody = table.querySelector('tbody');
            rows.forEach(row => tbody.appendChild(row));
        }
    </script>
}