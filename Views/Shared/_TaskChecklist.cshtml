@model IEnumerable<Collaborative_Task_Management_System.Models.TaskChecklistItem>

<div class="task-checklist">
    <h5>Checklist</h5>
    <ul class="list-group checklist-items" data-task-id="@ViewBag.TaskId">
        @foreach (var item in Model.OrderBy(i => i.Position))
        {
            <li class="list-group-item d-flex justify-content-between align-items-center" data-item-id="@item.Id">
                <div class="form-check">
                    <input class="form-check-input checklist-item-toggle" type="checkbox" value="@item.Id" id="checklist-@item.Id" @(item.IsCompleted ? "checked" : "")>
                    <label class="form-check-label @(item.IsCompleted ? "text-decoration-line-through" : "")" for="checklist-@item.Id">
                        @item.Description
                    </label>
                </div>
                <span class="badge bg-primary rounded-pill handle"><i class="bi bi-grip-vertical"></i></span>
            </li>
        }
    </ul>
    <div class="mt-3">
        <button type="button" class="btn btn-sm btn-outline-primary" id="add-checklist-item">Add Item</button>
    </div>
</div>

@section Scripts {
    <script>
        $(function() {
            // Toggle checklist item completion
            $('.checklist-item-toggle').on('change', function() {
                const itemId = $(this).val();
                const label = $(this).siblings('label');
                
                $.post('/Tasks/ToggleChecklistItem/' + itemId, function(data) {
                    if (data.success) {
                        if (data.isCompleted) {
                            label.addClass('text-decoration-line-through');
                        } else {
                            label.removeClass('text-decoration-line-through');
                        }
                    }
                });
            });
            
            // Make checklist sortable
            $('.checklist-items').sortable({
                handle: '.handle',
                update: function(event, ui) {
                    const taskId = $(this).data('task-id');
                    const itemIds = $(this).sortable('toArray', { attribute: 'data-item-id' });
                    
                    $.ajax({
                        url: '/Tasks/ReorderChecklistItems',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            taskId: taskId,
                            itemIds: itemIds
                        }),
                        success: function(data) {
                            if (!data.success) {
                                alert('Error reordering items');
                            }
                        }
                    });
                }
            });
            
            // Add new checklist item
            $('#add-checklist-item').on('click', function() {
                const description = prompt('Enter checklist item:');
                if (description) {
                    // Add item logic here
                }
            });
        });
    </script>
}