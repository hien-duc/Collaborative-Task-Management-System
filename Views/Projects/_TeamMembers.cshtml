@model Collaborative_Task_Management_System.Models.ViewModels.ProjectDetailsViewModel
@inject UserManager<ApplicationUser> UserManager

@if (Model.ProjectMembers != null && Model.ProjectMembers.Any())
{
    <div class="table-responsive">
        <table class="table table-bordered" aria-label="Team members table">
            <thead>
                <tr>
                    <th scope="col" aria-label="Member name">Name</th>
                    <th scope="col" aria-label="Joined date">Joined At</th>
                    @if (Model.IsManager || User.IsInRole("Admin"))
                    {
                        <th scope="col" aria-label="Actions">Actions</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var member in Model.ProjectMembers)
                {
                    var user = await UserManager.FindByIdAsync(member.UserId);
                    if (user != null)
                    {
                        <tr>
                            <td>@(string.IsNullOrEmpty(user.FullName) ? user.UserName : user.FullName)</td>
                            <td>@member.JoinedAt.ToString("MM/dd/yyyy")</td>
                            @if ((Model.IsManager || User.IsInRole("Admin")) && user.Id != Model.Project.CreatedById)
                            {
                                <td>
                                    <form asp-action="RemoveMember" asp-route-projectId="@Model.Project.Id" asp-route-userId="@user.Id" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <button type="button" class="btn btn-sm btn-danger remove-member-btn" 
                                                data-project-id="@Model.Project.Id" data-user-id="@user.Id"
                                                aria-label="Remove @(string.IsNullOrEmpty(user.FullName) ? user.UserName : user.FullName) from project">
                                            <i class="bi bi-person-dash"></i> Remove
                                        </button>
                                    </form>
                                </td>
                            }
                            else if (Model.IsManager || User.IsInRole("Admin"))
                            {
                                <td><span class="text-muted">Project Creator</span></td>
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="alert alert-info" role="alert">
        <i class="bi bi-info-circle me-2"></i> No team members added.
    </div>
}

@if (Model.IsManager || User.IsInRole("Admin"))
{
    <div class="mt-3">
        <form asp-action="AddMember" asp-route-projectId="@Model.Project.Id" method="post" class="row g-3 add-member-form" data-project-id="@Model.Project.Id">
            @Html.AntiForgeryToken()
            <div class="col-md-8 form-group">
                <label for="userId" class="form-label">Add Team Member</label>
                <select name="userId" id="userId" class="form-select" required aria-describedby="userIdHelp" aria-label="Select user to add">
                    <option value="">-- Select User --</option>
                    @foreach (var user in Model.AvailableUsers)
                    {
                        <option value="@user.Value">@user.Text</option>
                    }
                </select>
                <div id="userIdHelp" class="form-text">Select a user to add to this project</div>
            </div>
            <div class="col-md-4 d-flex align-items-end">
                <button type="submit" class="btn btn-primary" aria-label="Add selected user to project">
                    <i class="bi bi-person-plus"></i> Add Member
                </button>
            </div>
        </form>
    </div>
}