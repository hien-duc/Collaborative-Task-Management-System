@model Project
@{
    ViewData["Title"] = Model.Title;
}

<div class="container py-4">
    <div class="card mb-4">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="card-title h2 mb-0">@Model.Title</h1>
                <div class="btn-group">
                    @if (User.IsInRole("Manager") || User.IsInRole("Admin") || 
                         Model.CreatedBy.Id == User.Identity.GetUserId())
                    {
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                            <i class="bi bi-pencil"></i> Edit Project
                        </a>
                    }
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="bi bi-arrow-left"></i> Back to List
                    </a>
                </div>
            </div>

            <div class="row g-4">
                <div class="col-md-8">
                    <div class="mb-4">
                        <h6 class="text-muted mb-2">Description</h6>
                        <p class="mb-0">@Model.Description</p>
                    </div>

                    <div class="row mb-4">
                        <div class="col-sm-6 col-lg-3">
                            <h6 class="text-muted mb-2">Deadline</h6>
                            <p class="mb-0">@Model.Deadline.ToString("MMM dd, yyyy")</p>
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <h6 class="text-muted mb-2">Priority</h6>
                            <span class="badge bg-@(Model.Priority == "High" ? "danger" : 
                                                Model.Priority == "Medium" ? "warning" : "info")">@Model.Priority</span>
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <h6 class="text-muted mb-2">Status</h6>
                            <span class="badge bg-@(Model.Status == "Completed" ? "success" : 
                                                Model.Status == "InProgress" ? "warning" : "primary")">@Model.Status</span>
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <h6 class="text-muted mb-2">Created By</h6>
                            <p class="mb-0">@Model.CreatedBy.UserName</p>
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="card bg-light">
                        <div class="card-body">
                            <h6 class="card-title mb-3">Team Members</h6>
                            <div class="list-group list-group-flush">
                                @foreach (var member in Model.TeamMembers)
                                {
                                    <div class="list-group-item bg-transparent px-0">
                                        <div class="d-flex align-items-center">
                                            <div class="avatar-circle bg-primary text-white me-2">
                                                @member.UserName.Substring(0, 1).ToUpper()
                                            </div>
                                            <span>@member.UserName</span>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tasks Section -->
    <div class="card mb-4">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="h4 mb-0">Tasks</h2>
                <a asp-controller="Tasks" asp-action="Create" asp-route-projectId="@Model.Id" 
                   class="btn btn-primary">
                    <i class="bi bi-plus-lg"></i> Add Task
                </a>
            </div>

            <div class="table-responsive">
                <table class="table table-hover" aria-label="Project tasks table">
                    <thead>
                        <tr>
                            <th scope="col">Title</th>
                            <th scope="col">Assignee</th>
                            <th scope="col">Status</th>
                            <th scope="col">Priority</th>
                            <th scope="col">Due Date</th>
                            <th scope="col">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var task in Model.Tasks)
                        {
                            <tr data-task-id="@task.Id">
                                <td>
                                    <a href="#" class="text-decoration-none" data-bs-toggle="collapse" 
                                       data-bs-target="#task-details-@task.Id" aria-expanded="false" 
                                       aria-controls="task-details-@task.Id">
                                        @task.Title
                                    </a>
                                </td>
                                <td>@(task.AssignedUser?.UserName ?? "Unassigned")</td>
                                <td>
                                    <select class="form-select form-select-sm task-status-select"
                                            data-task-id="@task.Id" aria-label="Change task status">
                                        <option value="ToDo" selected=@(task.Status == TaskStatus.ToDo)>To Do</option>
                                        <option value="InProgress" selected=@(task.Status == TaskStatus.InProgress)>In Progress</option>
                                        <option value="Completed" selected=@(task.Status == TaskStatus.Completed)>Completed</option>
                                    </select>
                                </td>
                                <td>
                                    <span class="badge bg-@(task.Priority == "High" ? "danger" : 
                                                        task.Priority == "Medium" ? "warning" : "info")">@task.Priority</span>
                                </td>
                                <td>@task.DueDate.ToString("MMM dd, yyyy")</td>
                                <td>
                                    <div class="btn-group" role="group" aria-label="Task actions">
                                        <a asp-controller="Tasks" asp-action="Edit" asp-route-id="@task.Id"
                                           class="btn btn-sm btn-warning" aria-label="Edit task">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <button type="button" class="btn btn-sm btn-danger"
                                                onclick="deleteTask(@task.Id)" aria-label="Delete task">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="6" class="p-0">
                                    <div class="collapse" id="task-details-@task.Id">
                                        <div class="card card-body border-0">
                                            <!-- Comments Section -->
                                            <div class="mb-4">
                                                <h5>Comments</h5>
                                                <div id="comments-@task.Id" class="mb-3">
                                                    @foreach (var comment in task.Comments)
                                                    {
                                                        <div class="card mb-2" role="article">
                                                            <div class="card-body">
                                                                <p class="card-text">@comment.Text</p>
                                                                <small class="text-muted">
                                                                    @comment.User.UserName - @comment.CreatedAt.ToString("MM/dd/yyyy HH:mm")
                                                                </small>
                                                            </div>
                                                        </div>
                                                    }
                                                </div>
                                                <form onsubmit="event.preventDefault(); postComment(@task.Id, this.querySelector('textarea').value);">
                                                    <div class="mb-3">
                                                        <label for="commentText-@task.Id" class="form-label">Add Comment</label>
                                                        <textarea class="form-control" id="commentText-@task.Id" 
                                                                  rows="3" aria-label="Comment input"></textarea>
                                                    </div>
                                                    <button type="submit" class="btn btn-primary">
                                                        <i class="bi bi-chat-dots"></i> Post Comment
                                                    </button>
                                                </form>
                                            </div>

                                            <!-- Attachments Section -->
                                            <div>
                                                <h5>Attachments</h5>
                                                <div id="files-@task.Id" class="mb-3">
                                                    @if (task.FileAttachments != null && task.FileAttachments.Any())
                                                    {
                                                        <ul class="list-unstyled">
                                                            @foreach (var file in task.FileAttachments)
                                                            {
                                                                <li class="mb-2">
                                                                    <a href="/Tasks/DownloadFile/@file.Id" 
                                                                       class="text-decoration-none" download
                                                                       aria-label="Download @file.FileName">
                                                                        <i class="bi bi-file-earmark"></i> @file.FileName
                                                                    </a>
                                                                </li>
                                                            }
                                                        </ul>
                                                    }
                                                </div>
                                                <form class="mb-3">
                                                    <div class="mb-3">
                                                        <label for="fileInput-@task.Id" class="form-label">Upload Files</label>
                                                        <input type="file" class="form-control" id="fileInput-@task.Id" 
                                                               multiple aria-label="Upload file" 
                                                               onchange="handleFileUpload(@task.Id, this)">
                                                        <div class="form-text">Maximum file size: 5MB. Allowed types: PDF, Word, Images</div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Handle task status updates
        document.querySelectorAll('.task-status-select').forEach(select => {
            select.addEventListener('change', function() {
                const taskId = this.dataset.taskId;
                const newStatus = this.value;

                fetch(`/Tasks/UpdateStatus/${taskId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ status: newStatus })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        notificationSystem.showNotification('Task status updated successfully', 'success');
                    } else {
                        notificationSystem.showNotification('Failed to update task status', 'danger');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    notificationSystem.showNotification('An error occurred while updating task status', 'danger');
                });
            });
        });

        // Delete task function
        function deleteTask(taskId) {
            if (confirm('Are you sure you want to delete this task?')) {
                fetch(`/Tasks/Delete/${taskId}`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const taskRow = document.querySelector(`tr[data-task-id="${taskId}"]`);
                        taskRow.remove();
                        notificationSystem.showNotification('Task deleted successfully', 'success');
                    } else {
                        notificationSystem.showNotification('Failed to delete task', 'danger');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    notificationSystem.showNotification('An error occurred while deleting the task', 'danger');
                });
            }
        }
    </script>
}